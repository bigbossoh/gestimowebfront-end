{"ast":null,"code":"import { JwtHelperService } from '@auth0/angular-jwt';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/gs-api/src/services\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common/http\";\nexport let UserService = /*#__PURE__*/(() => {\n  class UserService {\n    constructor(apiService, router, http) {\n      this.apiService = apiService;\n      this.router = router;\n      this.http = http;\n      this.jwtHelper = new JwtHelperService();\n    } // public login(authRequestDto:AuthRequestDto) : Observable<Utilisateur>{\n    //  // console.log(\"we are in userservice first\", authRequestDto);\n    //   return this.apiService.login(authRequestDto);\n    // }\n\n\n    login(authRequestDto) {\n      //console.log(\"we are the login from us\");\n      return this.http.post(`${this.apiService.rootUrl}gestimoweb/api/v1/auth/login`, authRequestDto, {\n        observe: 'response'\n      });\n    }\n\n    logOut() {\n      this.token = null;\n      this.loggedInUsername = null;\n      localStorage.removeItem('user');\n      localStorage.removeItem('token');\n      localStorage.removeItem('users');\n    }\n\n    saveToken(token) {\n      this.token = token;\n      localStorage.setItem('token', token);\n    }\n\n    addUserToLocalCache(user) {\n      localStorage.setItem('user', JSON.stringify(user));\n    }\n\n    getUserFromLocalCache() {\n      return JSON.parse(localStorage.getItem('user'));\n    }\n\n    loadToken() {\n      this.token = localStorage.getItem('token');\n    }\n\n    getToken() {\n      return this.token;\n    }\n\n    isUserLoggedIn() {\n      this.loadToken();\n\n      if (this.token != null && this.token !== '') {\n        if (this.jwtHelper.decodeToken(this.token).sub != null || '') {\n          if (!this.jwtHelper.isTokenExpired(this.token)) {\n            this.loggedInUsername = this.jwtHelper.decodeToken(this.token).sub;\n            return true;\n          }\n        }\n      } else {\n        this.logOut();\n        return false;\n      }\n\n      return false;\n    }\n\n  }\n\n  UserService.ɵfac = function UserService_Factory(t) {\n    return new (t || UserService)(i0.ɵɵinject(i1.ApiService), i0.ɵɵinject(i2.Router), i0.ɵɵinject(i3.HttpClient));\n  };\n\n  UserService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: UserService,\n    factory: UserService.ɵfac,\n    providedIn: 'root'\n  });\n  return UserService;\n})();","map":null,"metadata":{},"sourceType":"module"}