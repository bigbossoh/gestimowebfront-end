{"ast":null,"code":"import { HttpRequest, HttpResponse, HttpHeaders } from '@angular/common/http';\nimport { BaseService as __BaseService } from '../base-service';\nimport { map as __map, filter as __filter } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../api-configuration\";\nimport * as i2 from \"@angular/common/http\";\nlet ApiService = /*#__PURE__*/(() => {\n  class ApiService extends __BaseService {\n    constructor(config, http) {\n      super(config, http);\n    }\n    /**\n     * @return successful operation\n     */\n\n\n    getAllAgenceByOrderAgenceResponse() {\n      let __params = this.newParams();\n\n      let __headers = new HttpHeaders();\n\n      let __body = null;\n      let req = new HttpRequest('GET', this.rootUrl + `gestimoweb/api/v1/agences/all`, __body, {\n        headers: __headers,\n        params: __params,\n        responseType: 'json'\n      });\n      return this.http.request(req).pipe(__filter(_r => _r instanceof HttpResponse), __map(_r => {\n        return _r;\n      }));\n    }\n    /**\n     * @return successful operation\n     */\n\n\n    getAllAgenceByOrderAgence() {\n      return this.getAllAgenceByOrderAgenceResponse().pipe(__map(_r => _r.body));\n    }\n    /**\n     * @param id undefined\n     * @return successful operation\n     */\n\n\n    deleteAgenceByIdAgenceResponse(id) {\n      let __params = this.newParams();\n\n      let __headers = new HttpHeaders();\n\n      let __body = null;\n      let req = new HttpRequest('DELETE', this.rootUrl + `gestimoweb/api/v1/agences/deleteagence/${id}`, __body, {\n        headers: __headers,\n        params: __params,\n        responseType: 'text'\n      });\n      return this.http.request(req).pipe(__filter(_r => _r instanceof HttpResponse), __map(_r => {\n        return _r;\n      }));\n    }\n    /**\n     * @param id undefined\n     * @return successful operation\n     */\n\n\n    deleteAgenceByIdAgence(id) {\n      return this.deleteAgenceByIdAgenceResponse(id).pipe(__map(_r => _r.body));\n    }\n    /**\n     * @param email undefined\n     * @return successful operation\n     */\n\n\n    getAgenceByEmailAgenceResponse(email) {\n      let __params = this.newParams();\n\n      let __headers = new HttpHeaders();\n\n      let __body = null;\n      let req = new HttpRequest('GET', this.rootUrl + `gestimoweb/api/v1/agences/getagencebyemail/${email}`, __body, {\n        headers: __headers,\n        params: __params,\n        responseType: 'json'\n      });\n      return this.http.request(req).pipe(__filter(_r => _r instanceof HttpResponse), __map(_r => {\n        return _r;\n      }));\n    }\n    /**\n     * @param email undefined\n     * @return successful operation\n     */\n\n\n    getAgenceByEmailAgence(email) {\n      return this.getAgenceByEmailAgenceResponse(email).pipe(__map(_r => _r.body));\n    }\n    /**\n     * @param id undefined\n     * @return successful operation\n     */\n\n\n    getAgenceByIDAgenceResponse(id) {\n      let __params = this.newParams();\n\n      let __headers = new HttpHeaders();\n\n      let __body = null;\n      let req = new HttpRequest('GET', this.rootUrl + `gestimoweb/api/v1/agences/getagencebyid/${id}`, __body, {\n        headers: __headers,\n        params: __params,\n        responseType: 'json'\n      });\n      return this.http.request(req).pipe(__filter(_r => _r instanceof HttpResponse), __map(_r => {\n        return _r;\n      }));\n    }\n    /**\n     * @param id undefined\n     * @return successful operation\n     */\n\n\n    getAgenceByIDAgence(id) {\n      return this.getAgenceByIDAgenceResponse(id).pipe(__map(_r => _r.body));\n    }\n    /**\n     * @param body undefined\n     * @return successful operation\n     */\n\n\n    authenticateAgenceResponse(body) {\n      let __params = this.newParams();\n\n      let __headers = new HttpHeaders();\n\n      let __body = null;\n      __body = body;\n      let req = new HttpRequest('POST', this.rootUrl + `gestimoweb/api/v1/agences/signup`, __body, {\n        headers: __headers,\n        params: __params,\n        responseType: 'json'\n      });\n      return this.http.request(req).pipe(__filter(_r => _r instanceof HttpResponse), __map(_r => {\n        return _r;\n      }));\n    }\n    /**\n     * @param body undefined\n     * @return successful operation\n     */\n\n\n    authenticateAgence(body) {\n      return this.authenticateAgenceResponse(body).pipe(__map(_r => _r.body));\n    }\n    /**\n     * @return successful operation\n     */\n\n\n    findAllAppartementResponse() {\n      let __params = this.newParams();\n\n      let __headers = new HttpHeaders();\n\n      let __body = null;\n      let req = new HttpRequest('GET', this.rootUrl + `gestimoweb/api/v1/appartement/all`, __body, {\n        headers: __headers,\n        params: __params,\n        responseType: 'json'\n      });\n      return this.http.request(req).pipe(__filter(_r => _r instanceof HttpResponse), __map(_r => {\n        return _r;\n      }));\n    }\n    /**\n     * @return successful operation\n     */\n\n\n    findAllAppartement() {\n      return this.findAllAppartementResponse().pipe(__map(_r => _r.body));\n    }\n    /**\n     * @param id undefined\n     * @return successful operation\n     */\n\n\n    deleteAppartementResponse(id) {\n      let __params = this.newParams();\n\n      let __headers = new HttpHeaders();\n\n      let __body = null;\n      let req = new HttpRequest('DELETE', this.rootUrl + `gestimoweb/api/v1/appartement/delete/${id}`, __body, {\n        headers: __headers,\n        params: __params,\n        responseType: 'text'\n      });\n      return this.http.request(req).pipe(__filter(_r => _r instanceof HttpResponse), __map(_r => {\n        return _r.clone({\n          body: _r.body === 'true'\n        });\n      }));\n    }\n    /**\n     * @param id undefined\n     * @return successful operation\n     */\n\n\n    deleteAppartement(id) {\n      return this.deleteAppartementResponse(id).pipe(__map(_r => _r.body));\n    }\n    /**\n     * @param id undefined\n     * @return successful operation\n     */\n\n\n    findByIDAppartementResponse(id) {\n      let __params = this.newParams();\n\n      let __headers = new HttpHeaders();\n\n      let __body = null;\n      let req = new HttpRequest('GET', this.rootUrl + `gestimoweb/api/v1/appartement/findById/${id}`, __body, {\n        headers: __headers,\n        params: __params,\n        responseType: 'json'\n      });\n      return this.http.request(req).pipe(__filter(_r => _r instanceof HttpResponse), __map(_r => {\n        return _r;\n      }));\n    }\n    /**\n     * @param id undefined\n     * @return successful operation\n     */\n\n\n    findByIDAppartement(id) {\n      return this.findByIDAppartementResponse(id).pipe(__map(_r => _r.body));\n    }\n    /**\n     * @param id undefined\n     * @return successful operation\n     */\n\n\n    findByIdEtageAppartementResponse(id) {\n      let __params = this.newParams();\n\n      let __headers = new HttpHeaders();\n\n      let __body = null;\n      let req = new HttpRequest('GET', this.rootUrl + `gestimoweb/api/v1/appartement/findByIdEtage/${id}`, __body, {\n        headers: __headers,\n        params: __params,\n        responseType: 'json'\n      });\n      return this.http.request(req).pipe(__filter(_r => _r instanceof HttpResponse), __map(_r => {\n        return _r;\n      }));\n    }\n    /**\n     * @param id undefined\n     * @return successful operation\n     */\n\n\n    findByIdEtageAppartement(id) {\n      return this.findByIdEtageAppartementResponse(id).pipe(__map(_r => _r.body));\n    }\n    /**\n     * @param name undefined\n     * @return successful operation\n     */\n\n\n    findByNameAppartementResponse(name) {\n      let __params = this.newParams();\n\n      let __headers = new HttpHeaders();\n\n      let __body = null;\n      let req = new HttpRequest('GET', this.rootUrl + `gestimoweb/api/v1/appartement/findByName/${name}`, __body, {\n        headers: __headers,\n        params: __params,\n        responseType: 'json'\n      });\n      return this.http.request(req).pipe(__filter(_r => _r instanceof HttpResponse), __map(_r => {\n        return _r;\n      }));\n    }\n    /**\n     * @param name undefined\n     * @return successful operation\n     */\n\n\n    findByNameAppartement(name) {\n      return this.findByNameAppartementResponse(name).pipe(__map(_r => _r.body));\n    }\n    /**\n     * @param body undefined\n     * @return successful operation\n     */\n\n\n    saveAppartementResponse(body) {\n      let __params = this.newParams();\n\n      let __headers = new HttpHeaders();\n\n      let __body = null;\n      __body = body;\n      let req = new HttpRequest('POST', this.rootUrl + `gestimoweb/api/v1/appartement/save`, __body, {\n        headers: __headers,\n        params: __params,\n        responseType: 'json'\n      });\n      return this.http.request(req).pipe(__filter(_r => _r instanceof HttpResponse), __map(_r => {\n        return _r;\n      }));\n    }\n    /**\n     * @param body undefined\n     * @return successful operation\n     */\n\n\n    saveAppartement(body) {\n      return this.saveAppartementResponse(body).pipe(__map(_r => _r.body));\n    }\n    /**\n     * @param body undefined\n     * @return successful operation\n     */\n\n\n    saveAppelLoyersResponse(body) {\n      let __params = this.newParams();\n\n      let __headers = new HttpHeaders();\n\n      let __body = null;\n      __body = body;\n      let req = new HttpRequest('POST', this.rootUrl + `gestimoweb/api/v1/appelloyer/save`, __body, {\n        headers: __headers,\n        params: __params,\n        responseType: 'json'\n      });\n      return this.http.request(req).pipe(__filter(_r => _r instanceof HttpResponse), __map(_r => {\n        return _r;\n      }));\n    }\n    /**\n     * @param body undefined\n     * @return successful operation\n     */\n\n\n    saveAppelLoyers(body) {\n      return this.saveAppelLoyersResponse(body).pipe(__map(_r => _r.body));\n    }\n    /**\n     * @param token undefined\n     * @return successful operation\n     */\n\n\n    verifyAccountResponse(token) {\n      let __params = this.newParams();\n\n      let __headers = new HttpHeaders();\n\n      let __body = null;\n      let req = new HttpRequest('GET', this.rootUrl + `gestimoweb/api/v1/auth/accountVerification/${token}`, __body, {\n        headers: __headers,\n        params: __params,\n        responseType: 'text'\n      });\n      return this.http.request(req).pipe(__filter(_r => _r instanceof HttpResponse), __map(_r => {\n        return _r;\n      }));\n    }\n    /**\n     * @param token undefined\n     * @return successful operation\n     */\n\n\n    verifyAccount(token) {\n      return this.verifyAccountResponse(token).pipe(__map(_r => _r.body));\n    }\n    /**\n     * @param body undefined\n     * @return successful operation\n     */\n\n\n    loginResponse(body) {\n      let __params = this.newParams();\n\n      let __headers = new HttpHeaders();\n\n      let __body = null;\n      __body = body;\n      let req = new HttpRequest('POST', this.rootUrl + `gestimoweb/api/v1/auth/login`, __body, {\n        headers: __headers,\n        params: __params,\n        responseType: 'json'\n      });\n      return this.http.request(req).pipe(__filter(_r => _r instanceof HttpResponse), __map(_r => {\n        return _r;\n      }));\n    }\n    /**\n     * @param body undefined\n     * @return successful operation\n     */\n\n\n    login(body) {\n      return this.loginResponse(body).pipe(__map(_r => _r.body));\n    }\n    /**\n     * @return successful operation\n     */\n\n\n    findAllBailAppartementResponse() {\n      let __params = this.newParams();\n\n      let __headers = new HttpHeaders();\n\n      let __body = null;\n      let req = new HttpRequest('GET', this.rootUrl + `gestimoweb/api/v1/bailappartement/all`, __body, {\n        headers: __headers,\n        params: __params,\n        responseType: 'json'\n      });\n      return this.http.request(req).pipe(__filter(_r => _r instanceof HttpResponse), __map(_r => {\n        return _r;\n      }));\n    }\n    /**\n     * @return successful operation\n     */\n\n\n    findAllBailAppartement() {\n      return this.findAllBailAppartementResponse().pipe(__map(_r => _r.body));\n    }\n    /**\n     * @param id undefined\n     * @return successful operation\n     */\n\n\n    deleteBailAppartementResponse(id) {\n      let __params = this.newParams();\n\n      let __headers = new HttpHeaders();\n\n      let __body = null;\n      let req = new HttpRequest('DELETE', this.rootUrl + `gestimoweb/api/v1/bailappartement/delete/${id}`, __body, {\n        headers: __headers,\n        params: __params,\n        responseType: 'text'\n      });\n      return this.http.request(req).pipe(__filter(_r => _r instanceof HttpResponse), __map(_r => {\n        return _r.clone({\n          body: _r.body === 'true'\n        });\n      }));\n    }\n    /**\n     * @param id undefined\n     * @return successful operation\n     */\n\n\n    deleteBailAppartement(id) {\n      return this.deleteBailAppartementResponse(id).pipe(__map(_r => _r.body));\n    }\n    /**\n     * @param id undefined\n     * @return successful operation\n     */\n\n\n    findByIDBailAppartementResponse(id) {\n      let __params = this.newParams();\n\n      let __headers = new HttpHeaders();\n\n      let __body = null;\n      let req = new HttpRequest('GET', this.rootUrl + `gestimoweb/api/v1/bailappartement/findById/${id}`, __body, {\n        headers: __headers,\n        params: __params,\n        responseType: 'json'\n      });\n      return this.http.request(req).pipe(__filter(_r => _r instanceof HttpResponse), __map(_r => {\n        return _r;\n      }));\n    }\n    /**\n     * @param id undefined\n     * @return successful operation\n     */\n\n\n    findByIDBailAppartement(id) {\n      return this.findByIDBailAppartementResponse(id).pipe(__map(_r => _r.body));\n    }\n    /**\n     * @param name undefined\n     * @return successful operation\n     */\n\n\n    findByNameBailAppartementResponse(name) {\n      let __params = this.newParams();\n\n      let __headers = new HttpHeaders();\n\n      let __body = null;\n      let req = new HttpRequest('GET', this.rootUrl + `gestimoweb/api/v1/bailappartement/findByName/${name}`, __body, {\n        headers: __headers,\n        params: __params,\n        responseType: 'json'\n      });\n      return this.http.request(req).pipe(__filter(_r => _r instanceof HttpResponse), __map(_r => {\n        return _r;\n      }));\n    }\n    /**\n     * @param name undefined\n     * @return successful operation\n     */\n\n\n    findByNameBailAppartement(name) {\n      return this.findByNameBailAppartementResponse(name).pipe(__map(_r => _r.body));\n    }\n    /**\n     * @param body undefined\n     * @return successful operation\n     */\n\n\n    saveBailAppartementResponse(body) {\n      let __params = this.newParams();\n\n      let __headers = new HttpHeaders();\n\n      let __body = null;\n      __body = body;\n      let req = new HttpRequest('POST', this.rootUrl + `gestimoweb/api/v1/bailappartement/save`, __body, {\n        headers: __headers,\n        params: __params,\n        responseType: 'json'\n      });\n      return this.http.request(req).pipe(__filter(_r => _r instanceof HttpResponse), __map(_r => {\n        return _r;\n      }));\n    }\n    /**\n     * @param body undefined\n     * @return successful operation\n     */\n\n\n    saveBailAppartement(body) {\n      return this.saveBailAppartementResponse(body).pipe(__map(_r => _r.body));\n    }\n    /**\n     * @return successful operation\n     */\n\n\n    findAllBailMagasinResponse() {\n      let __params = this.newParams();\n\n      let __headers = new HttpHeaders();\n\n      let __body = null;\n      let req = new HttpRequest('GET', this.rootUrl + `gestimoweb/api/v1/bailmagasin/all`, __body, {\n        headers: __headers,\n        params: __params,\n        responseType: 'json'\n      });\n      return this.http.request(req).pipe(__filter(_r => _r instanceof HttpResponse), __map(_r => {\n        return _r;\n      }));\n    }\n    /**\n     * @return successful operation\n     */\n\n\n    findAllBailMagasin() {\n      return this.findAllBailMagasinResponse().pipe(__map(_r => _r.body));\n    }\n    /**\n     * @param id undefined\n     * @return successful operation\n     */\n\n\n    deleteBailMagasinResponse(id) {\n      let __params = this.newParams();\n\n      let __headers = new HttpHeaders();\n\n      let __body = null;\n      let req = new HttpRequest('DELETE', this.rootUrl + `gestimoweb/api/v1/bailmagasin/delete/${id}`, __body, {\n        headers: __headers,\n        params: __params,\n        responseType: 'text'\n      });\n      return this.http.request(req).pipe(__filter(_r => _r instanceof HttpResponse), __map(_r => {\n        return _r.clone({\n          body: _r.body === 'true'\n        });\n      }));\n    }\n    /**\n     * @param id undefined\n     * @return successful operation\n     */\n\n\n    deleteBailMagasin(id) {\n      return this.deleteBailMagasinResponse(id).pipe(__map(_r => _r.body));\n    }\n    /**\n     * @param id undefined\n     * @return successful operation\n     */\n\n\n    findByIDBailMagasinResponse(id) {\n      let __params = this.newParams();\n\n      let __headers = new HttpHeaders();\n\n      let __body = null;\n      let req = new HttpRequest('GET', this.rootUrl + `gestimoweb/api/v1/bailmagasin/findById/${id}`, __body, {\n        headers: __headers,\n        params: __params,\n        responseType: 'json'\n      });\n      return this.http.request(req).pipe(__filter(_r => _r instanceof HttpResponse), __map(_r => {\n        return _r;\n      }));\n    }\n    /**\n     * @param id undefined\n     * @return successful operation\n     */\n\n\n    findByIDBailMagasin(id) {\n      return this.findByIDBailMagasinResponse(id).pipe(__map(_r => _r.body));\n    }\n    /**\n     * @param name undefined\n     * @return successful operation\n     */\n\n\n    findByNameBailMagasinResponse(name) {\n      let __params = this.newParams();\n\n      let __headers = new HttpHeaders();\n\n      let __body = null;\n      let req = new HttpRequest('GET', this.rootUrl + `gestimoweb/api/v1/bailmagasin/findByName/${name}`, __body, {\n        headers: __headers,\n        params: __params,\n        responseType: 'json'\n      });\n      return this.http.request(req).pipe(__filter(_r => _r instanceof HttpResponse), __map(_r => {\n        return _r;\n      }));\n    }\n    /**\n     * @param name undefined\n     * @return successful operation\n     */\n\n\n    findByNameBailMagasin(name) {\n      return this.findByNameBailMagasinResponse(name).pipe(__map(_r => _r.body));\n    }\n    /**\n     * @param body undefined\n     * @return successful operation\n     */\n\n\n    saveBailMagasinResponse(body) {\n      let __params = this.newParams();\n\n      let __headers = new HttpHeaders();\n\n      let __body = null;\n      __body = body;\n      let req = new HttpRequest('POST', this.rootUrl + `gestimoweb/api/v1/bailmagasin/save`, __body, {\n        headers: __headers,\n        params: __params,\n        responseType: 'json'\n      });\n      return this.http.request(req).pipe(__filter(_r => _r instanceof HttpResponse), __map(_r => {\n        return _r;\n      }));\n    }\n    /**\n     * @param body undefined\n     * @return successful operation\n     */\n\n\n    saveBailMagasin(body) {\n      return this.saveBailMagasinResponse(body).pipe(__map(_r => _r.body));\n    }\n    /**\n     * @return successful operation\n     */\n\n\n    findAllBailStudioResponse() {\n      let __params = this.newParams();\n\n      let __headers = new HttpHeaders();\n\n      let __body = null;\n      let req = new HttpRequest('GET', this.rootUrl + `gestimoweb/api/v1/bailsudio/all`, __body, {\n        headers: __headers,\n        params: __params,\n        responseType: 'json'\n      });\n      return this.http.request(req).pipe(__filter(_r => _r instanceof HttpResponse), __map(_r => {\n        return _r;\n      }));\n    }\n    /**\n     * @return successful operation\n     */\n\n\n    findAllBailStudio() {\n      return this.findAllBailStudioResponse().pipe(__map(_r => _r.body));\n    }\n    /**\n     * @param id undefined\n     * @return successful operation\n     */\n\n\n    deleteBailStudioResponse(id) {\n      let __params = this.newParams();\n\n      let __headers = new HttpHeaders();\n\n      let __body = null;\n      let req = new HttpRequest('DELETE', this.rootUrl + `gestimoweb/api/v1/bailsudio/delete/${id}`, __body, {\n        headers: __headers,\n        params: __params,\n        responseType: 'text'\n      });\n      return this.http.request(req).pipe(__filter(_r => _r instanceof HttpResponse), __map(_r => {\n        return _r.clone({\n          body: _r.body === 'true'\n        });\n      }));\n    }\n    /**\n     * @param id undefined\n     * @return successful operation\n     */\n\n\n    deleteBailStudio(id) {\n      return this.deleteBailStudioResponse(id).pipe(__map(_r => _r.body));\n    }\n    /**\n     * @param id undefined\n     * @return successful operation\n     */\n\n\n    findBailStudioByIDResponse(id) {\n      let __params = this.newParams();\n\n      let __headers = new HttpHeaders();\n\n      let __body = null;\n      let req = new HttpRequest('GET', this.rootUrl + `gestimoweb/api/v1/bailsudio/findById/${id}`, __body, {\n        headers: __headers,\n        params: __params,\n        responseType: 'json'\n      });\n      return this.http.request(req).pipe(__filter(_r => _r instanceof HttpResponse), __map(_r => {\n        return _r;\n      }));\n    }\n    /**\n     * @param id undefined\n     * @return successful operation\n     */\n\n\n    findBailStudioByID(id) {\n      return this.findBailStudioByIDResponse(id).pipe(__map(_r => _r.body));\n    }\n    /**\n     * @param name undefined\n     * @return successful operation\n     */\n\n\n    findBailStudioByNameResponse(name) {\n      let __params = this.newParams();\n\n      let __headers = new HttpHeaders();\n\n      let __body = null;\n      let req = new HttpRequest('GET', this.rootUrl + `gestimoweb/api/v1/bailsudio/findByName/${name}`, __body, {\n        headers: __headers,\n        params: __params,\n        responseType: 'json'\n      });\n      return this.http.request(req).pipe(__filter(_r => _r instanceof HttpResponse), __map(_r => {\n        return _r;\n      }));\n    }\n    /**\n     * @param name undefined\n     * @return successful operation\n     */\n\n\n    findBailStudioByName(name) {\n      return this.findBailStudioByNameResponse(name).pipe(__map(_r => _r.body));\n    }\n    /**\n     * @param body undefined\n     * @return successful operation\n     */\n\n\n    saveBailStudioResponse(body) {\n      let __params = this.newParams();\n\n      let __headers = new HttpHeaders();\n\n      let __body = null;\n      __body = body;\n      let req = new HttpRequest('POST', this.rootUrl + `gestimoweb/api/v1/bailsudio/save`, __body, {\n        headers: __headers,\n        params: __params,\n        responseType: 'json'\n      });\n      return this.http.request(req).pipe(__filter(_r => _r instanceof HttpResponse), __map(_r => {\n        return _r;\n      }));\n    }\n    /**\n     * @param body undefined\n     * @return successful operation\n     */\n\n\n    saveBailStudio(body) {\n      return this.saveBailStudioResponse(body).pipe(__map(_r => _r.body));\n    }\n    /**\n     * @return successful operation\n     */\n\n\n    findAllBailVillaResponse() {\n      let __params = this.newParams();\n\n      let __headers = new HttpHeaders();\n\n      let __body = null;\n      let req = new HttpRequest('GET', this.rootUrl + `gestimoweb/api/v1/bailvilla/all`, __body, {\n        headers: __headers,\n        params: __params,\n        responseType: 'json'\n      });\n      return this.http.request(req).pipe(__filter(_r => _r instanceof HttpResponse), __map(_r => {\n        return _r;\n      }));\n    }\n    /**\n     * @return successful operation\n     */\n\n\n    findAllBailVilla() {\n      return this.findAllBailVillaResponse().pipe(__map(_r => _r.body));\n    }\n    /**\n     * @param id undefined\n     * @return successful operation\n     */\n\n\n    deleteBailVillaResponse(id) {\n      let __params = this.newParams();\n\n      let __headers = new HttpHeaders();\n\n      let __body = null;\n      let req = new HttpRequest('DELETE', this.rootUrl + `gestimoweb/api/v1/bailvilla/delete/${id}`, __body, {\n        headers: __headers,\n        params: __params,\n        responseType: 'text'\n      });\n      return this.http.request(req).pipe(__filter(_r => _r instanceof HttpResponse), __map(_r => {\n        return _r.clone({\n          body: _r.body === 'true'\n        });\n      }));\n    }\n    /**\n     * @param id undefined\n     * @return successful operation\n     */\n\n\n    deleteBailVilla(id) {\n      return this.deleteBailVillaResponse(id).pipe(__map(_r => _r.body));\n    }\n    /**\n     * @param id undefined\n     * @return successful operation\n     */\n\n\n    findBailVillaByIDResponse(id) {\n      let __params = this.newParams();\n\n      let __headers = new HttpHeaders();\n\n      let __body = null;\n      let req = new HttpRequest('GET', this.rootUrl + `gestimoweb/api/v1/bailvilla/findById/${id}`, __body, {\n        headers: __headers,\n        params: __params,\n        responseType: 'json'\n      });\n      return this.http.request(req).pipe(__filter(_r => _r instanceof HttpResponse), __map(_r => {\n        return _r;\n      }));\n    }\n    /**\n     * @param id undefined\n     * @return successful operation\n     */\n\n\n    findBailVillaByID(id) {\n      return this.findBailVillaByIDResponse(id).pipe(__map(_r => _r.body));\n    }\n    /**\n     * @param name undefined\n     * @return successful operation\n     */\n\n\n    findBailVillaByNameResponse(name) {\n      let __params = this.newParams();\n\n      let __headers = new HttpHeaders();\n\n      let __body = null;\n      let req = new HttpRequest('GET', this.rootUrl + `gestimoweb/api/v1/bailvilla/findByName/${name}`, __body, {\n        headers: __headers,\n        params: __params,\n        responseType: 'json'\n      });\n      return this.http.request(req).pipe(__filter(_r => _r instanceof HttpResponse), __map(_r => {\n        return _r;\n      }));\n    }\n    /**\n     * @param name undefined\n     * @return successful operation\n     */\n\n\n    findBailVillaByName(name) {\n      return this.findBailVillaByNameResponse(name).pipe(__map(_r => _r.body));\n    }\n    /**\n     * @param body undefined\n     * @return successful operation\n     */\n\n\n    saveBailVillaResponse(body) {\n      let __params = this.newParams();\n\n      let __headers = new HttpHeaders();\n\n      let __body = null;\n      __body = body;\n      let req = new HttpRequest('POST', this.rootUrl + `gestimoweb/api/v1/bailvilla/save`, __body, {\n        headers: __headers,\n        params: __params,\n        responseType: 'json'\n      });\n      return this.http.request(req).pipe(__filter(_r => _r instanceof HttpResponse), __map(_r => {\n        return _r;\n      }));\n    }\n    /**\n     * @param body undefined\n     * @return successful operation\n     */\n\n\n    saveBailVilla(body) {\n      return this.saveBailVillaResponse(body).pipe(__map(_r => _r.body));\n    }\n    /**\n     * @return successful operation\n     */\n\n\n    findAllBienResponse() {\n      let __params = this.newParams();\n\n      let __headers = new HttpHeaders();\n\n      let __body = null;\n      let req = new HttpRequest('GET', this.rootUrl + `gestimoweb/api/v1/bienImmobilier/all`, __body, {\n        headers: __headers,\n        params: __params,\n        responseType: 'json'\n      });\n      return this.http.request(req).pipe(__filter(_r => _r instanceof HttpResponse), __map(_r => {\n        return _r;\n      }));\n    }\n    /**\n     * @return successful operation\n     */\n\n\n    findAllBien() {\n      return this.findAllBienResponse().pipe(__map(_r => _r.body));\n    }\n    /**\n     * @return successful operation\n     */\n\n\n    findAllCommuneResponse() {\n      let __params = this.newParams();\n\n      let __headers = new HttpHeaders();\n\n      let __body = null;\n      let req = new HttpRequest('GET', this.rootUrl + `gestimoweb/api/v1/commune/all`, __body, {\n        headers: __headers,\n        params: __params,\n        responseType: 'json'\n      });\n      return this.http.request(req).pipe(__filter(_r => _r instanceof HttpResponse), __map(_r => {\n        return _r;\n      }));\n    }\n    /**\n     * @return successful operation\n     */\n\n\n    findAllCommune() {\n      return this.findAllCommuneResponse().pipe(__map(_r => _r.body));\n    }\n    /**\n     * @param id undefined\n     * @return successful operation\n     */\n\n\n    deleteCommuneResponse(id) {\n      let __params = this.newParams();\n\n      let __headers = new HttpHeaders();\n\n      let __body = null;\n      let req = new HttpRequest('DELETE', this.rootUrl + `gestimoweb/api/v1/commune/delete/${id}`, __body, {\n        headers: __headers,\n        params: __params,\n        responseType: 'text'\n      });\n      return this.http.request(req).pipe(__filter(_r => _r instanceof HttpResponse), __map(_r => {\n        return _r.clone({\n          body: _r.body === 'true'\n        });\n      }));\n    }\n    /**\n     * @param id undefined\n     * @return successful operation\n     */\n\n\n    deleteCommune(id) {\n      return this.deleteCommuneResponse(id).pipe(__map(_r => _r.body));\n    }\n    /**\n     * @param id undefined\n     * @return successful operation\n     */\n\n\n    findCommuneByIDResponse(id) {\n      let __params = this.newParams();\n\n      let __headers = new HttpHeaders();\n\n      let __body = null;\n      let req = new HttpRequest('GET', this.rootUrl + `gestimoweb/api/v1/commune/findById/${id}`, __body, {\n        headers: __headers,\n        params: __params,\n        responseType: 'json'\n      });\n      return this.http.request(req).pipe(__filter(_r => _r instanceof HttpResponse), __map(_r => {\n        return _r;\n      }));\n    }\n    /**\n     * @param id undefined\n     * @return successful operation\n     */\n\n\n    findCommuneByID(id) {\n      return this.findCommuneByIDResponse(id).pipe(__map(_r => _r.body));\n    }\n    /**\n     * @param id undefined\n     * @return successful operation\n     */\n\n\n    findCommuneByIdPaysResponse(id) {\n      let __params = this.newParams();\n\n      let __headers = new HttpHeaders();\n\n      let __body = null;\n      let req = new HttpRequest('GET', this.rootUrl + `gestimoweb/api/v1/commune/findByIdVille/${id}`, __body, {\n        headers: __headers,\n        params: __params,\n        responseType: 'json'\n      });\n      return this.http.request(req).pipe(__filter(_r => _r instanceof HttpResponse), __map(_r => {\n        return _r;\n      }));\n    }\n    /**\n     * @param id undefined\n     * @return successful operation\n     */\n\n\n    findCommuneByIdPays(id) {\n      return this.findCommuneByIdPaysResponse(id).pipe(__map(_r => _r.body));\n    }\n    /**\n     * @param name undefined\n     * @return successful operation\n     */\n\n\n    findCommuneByNameResponse(name) {\n      let __params = this.newParams();\n\n      let __headers = new HttpHeaders();\n\n      let __body = null;\n      let req = new HttpRequest('GET', this.rootUrl + `gestimoweb/api/v1/commune/findByName/${name}`, __body, {\n        headers: __headers,\n        params: __params,\n        responseType: 'json'\n      });\n      return this.http.request(req).pipe(__filter(_r => _r instanceof HttpResponse), __map(_r => {\n        return _r;\n      }));\n    }\n    /**\n     * @param name undefined\n     * @return successful operation\n     */\n\n\n    findCommuneByName(name) {\n      return this.findCommuneByNameResponse(name).pipe(__map(_r => _r.body));\n    }\n    /**\n     * @param body undefined\n     * @return successful operation\n     */\n\n\n    saveCommuneResponse(body) {\n      let __params = this.newParams();\n\n      let __headers = new HttpHeaders();\n\n      let __body = null;\n      __body = body;\n      let req = new HttpRequest('POST', this.rootUrl + `gestimoweb/api/v1/commune/save`, __body, {\n        headers: __headers,\n        params: __params,\n        responseType: 'json'\n      });\n      return this.http.request(req).pipe(__filter(_r => _r instanceof HttpResponse), __map(_r => {\n        return _r;\n      }));\n    }\n    /**\n     * @param body undefined\n     * @return successful operation\n     */\n\n\n    saveCommune(body) {\n      return this.saveCommuneResponse(body).pipe(__map(_r => _r.body));\n    }\n    /**\n     * @param body undefined\n     * @return successful operation\n     */\n\n\n    saveEspeceEncaissementResponse(body) {\n      let __params = this.newParams();\n\n      let __headers = new HttpHeaders();\n\n      let __body = null;\n      __body = body;\n      let req = new HttpRequest('POST', this.rootUrl + `gestimoweb/api/v1/especeencaissement/save`, __body, {\n        headers: __headers,\n        params: __params,\n        responseType: 'json'\n      });\n      return this.http.request(req).pipe(__filter(_r => _r instanceof HttpResponse), __map(_r => {\n        return _r;\n      }));\n    }\n    /**\n     * @param body undefined\n     * @return successful operation\n     */\n\n\n    saveEspeceEncaissement(body) {\n      return this.saveEspeceEncaissementResponse(body).pipe(__map(_r => _r.body));\n    }\n    /**\n     * @return successful operation\n     */\n\n\n    findAllEtageResponse() {\n      let __params = this.newParams();\n\n      let __headers = new HttpHeaders();\n\n      let __body = null;\n      let req = new HttpRequest('GET', this.rootUrl + `gestimoweb/api/v1/etage/all`, __body, {\n        headers: __headers,\n        params: __params,\n        responseType: 'json'\n      });\n      return this.http.request(req).pipe(__filter(_r => _r instanceof HttpResponse), __map(_r => {\n        return _r;\n      }));\n    }\n    /**\n     * @return successful operation\n     */\n\n\n    findAllEtage() {\n      return this.findAllEtageResponse().pipe(__map(_r => _r.body));\n    }\n    /**\n     * @param id undefined\n     * @return successful operation\n     */\n\n\n    deleteEtageResponse(id) {\n      let __params = this.newParams();\n\n      let __headers = new HttpHeaders();\n\n      let __body = null;\n      let req = new HttpRequest('DELETE', this.rootUrl + `gestimoweb/api/v1/etage/delete/${id}`, __body, {\n        headers: __headers,\n        params: __params,\n        responseType: 'text'\n      });\n      return this.http.request(req).pipe(__filter(_r => _r instanceof HttpResponse), __map(_r => {\n        return _r.clone({\n          body: _r.body === 'true'\n        });\n      }));\n    }\n    /**\n     * @param id undefined\n     * @return successful operation\n     */\n\n\n    deleteEtage(id) {\n      return this.deleteEtageResponse(id).pipe(__map(_r => _r.body));\n    }\n    /**\n     * @param id undefined\n     * @return successful operation\n     */\n\n\n    findEtageByIDResponse(id) {\n      let __params = this.newParams();\n\n      let __headers = new HttpHeaders();\n\n      let __body = null;\n      let req = new HttpRequest('GET', this.rootUrl + `gestimoweb/api/v1/etage/findById/${id}`, __body, {\n        headers: __headers,\n        params: __params,\n        responseType: 'json'\n      });\n      return this.http.request(req).pipe(__filter(_r => _r instanceof HttpResponse), __map(_r => {\n        return _r;\n      }));\n    }\n    /**\n     * @param id undefined\n     * @return successful operation\n     */\n\n\n    findEtageByID(id) {\n      return this.findEtageByIDResponse(id).pipe(__map(_r => _r.body));\n    }\n    /**\n     * @param id undefined\n     * @return successful operation\n     */\n\n\n    findEtageByIdPaysResponse(id) {\n      let __params = this.newParams();\n\n      let __headers = new HttpHeaders();\n\n      let __body = null;\n      let req = new HttpRequest('GET', this.rootUrl + `gestimoweb/api/v1/etage/findByIdImmeuble/${id}`, __body, {\n        headers: __headers,\n        params: __params,\n        responseType: 'json'\n      });\n      return this.http.request(req).pipe(__filter(_r => _r instanceof HttpResponse), __map(_r => {\n        return _r;\n      }));\n    }\n    /**\n     * @param id undefined\n     * @return successful operation\n     */\n\n\n    findEtageByIdPays(id) {\n      return this.findEtageByIdPaysResponse(id).pipe(__map(_r => _r.body));\n    }\n    /**\n     * @param name undefined\n     * @return successful operation\n     */\n\n\n    findEtageByNameResponse(name) {\n      let __params = this.newParams();\n\n      let __headers = new HttpHeaders();\n\n      let __body = null;\n      let req = new HttpRequest('GET', this.rootUrl + `gestimoweb/api/v1/etage/findByName/${name}`, __body, {\n        headers: __headers,\n        params: __params,\n        responseType: 'json'\n      });\n      return this.http.request(req).pipe(__filter(_r => _r instanceof HttpResponse), __map(_r => {\n        return _r;\n      }));\n    }\n    /**\n     * @param name undefined\n     * @return successful operation\n     */\n\n\n    findEtageByName(name) {\n      return this.findEtageByNameResponse(name).pipe(__map(_r => _r.body));\n    }\n    /**\n     * @param body undefined\n     * @return successful operation\n     */\n\n\n    saveEtageResponse(body) {\n      let __params = this.newParams();\n\n      let __headers = new HttpHeaders();\n\n      let __body = null;\n      __body = body;\n      let req = new HttpRequest('POST', this.rootUrl + `gestimoweb/api/v1/etage/save`, __body, {\n        headers: __headers,\n        params: __params,\n        responseType: 'json'\n      });\n      return this.http.request(req).pipe(__filter(_r => _r instanceof HttpResponse), __map(_r => {\n        return _r;\n      }));\n    }\n    /**\n     * @param body undefined\n     * @return successful operation\n     */\n\n\n    saveEtage(body) {\n      return this.saveEtageResponse(body).pipe(__map(_r => _r.body));\n    }\n    /**\n     * @return successful operation\n     */\n\n\n    findAllImmeubleResponse() {\n      let __params = this.newParams();\n\n      let __headers = new HttpHeaders();\n\n      let __body = null;\n      let req = new HttpRequest('GET', this.rootUrl + `gestimoweb/api/v1/immeuble/all`, __body, {\n        headers: __headers,\n        params: __params,\n        responseType: 'json'\n      });\n      return this.http.request(req).pipe(__filter(_r => _r instanceof HttpResponse), __map(_r => {\n        return _r;\n      }));\n    }\n    /**\n     * @return successful operation\n     */\n\n\n    findAllImmeuble() {\n      return this.findAllImmeubleResponse().pipe(__map(_r => _r.body));\n    }\n    /**\n     * @param id undefined\n     * @return successful operation\n     */\n\n\n    deleteImmeubleResponse(id) {\n      let __params = this.newParams();\n\n      let __headers = new HttpHeaders();\n\n      let __body = null;\n      let req = new HttpRequest('DELETE', this.rootUrl + `gestimoweb/api/v1/immeuble/deleteImmeuble/${id}`, __body, {\n        headers: __headers,\n        params: __params,\n        responseType: 'text'\n      });\n      return this.http.request(req).pipe(__filter(_r => _r instanceof HttpResponse), __map(_r => {\n        return _r.clone({\n          body: _r.body === 'true'\n        });\n      }));\n    }\n    /**\n     * @param id undefined\n     * @return successful operation\n     */\n\n\n    deleteImmeuble(id) {\n      return this.deleteImmeubleResponse(id).pipe(__map(_r => _r.body));\n    }\n    /**\n     * @param id undefined\n     * @return successful operation\n     */\n\n\n    findImmeubleByIDResponse(id) {\n      let __params = this.newParams();\n\n      let __headers = new HttpHeaders();\n\n      let __body = null;\n      let req = new HttpRequest('GET', this.rootUrl + `gestimoweb/api/v1/immeuble/findById/${id}`, __body, {\n        headers: __headers,\n        params: __params,\n        responseType: 'json'\n      });\n      return this.http.request(req).pipe(__filter(_r => _r instanceof HttpResponse), __map(_r => {\n        return _r;\n      }));\n    }\n    /**\n     * @param id undefined\n     * @return successful operation\n     */\n\n\n    findImmeubleByID(id) {\n      return this.findImmeubleByIDResponse(id).pipe(__map(_r => _r.body));\n    }\n    /**\n     * @param id undefined\n     * @return successful operation\n     */\n\n\n    findImmeubleByIdSiteResponse(id) {\n      let __params = this.newParams();\n\n      let __headers = new HttpHeaders();\n\n      let __body = null;\n      let req = new HttpRequest('GET', this.rootUrl + `gestimoweb/api/v1/immeuble/findByIdSite/${id}`, __body, {\n        headers: __headers,\n        params: __params,\n        responseType: 'json'\n      });\n      return this.http.request(req).pipe(__filter(_r => _r instanceof HttpResponse), __map(_r => {\n        return _r;\n      }));\n    }\n    /**\n     * @param id undefined\n     * @return successful operation\n     */\n\n\n    findImmeubleByIdSite(id) {\n      return this.findImmeubleByIdSiteResponse(id).pipe(__map(_r => _r.body));\n    }\n    /**\n     * @param name undefined\n     * @return successful operation\n     */\n\n\n    findImmeubleByNameResponse(name) {\n      let __params = this.newParams();\n\n      let __headers = new HttpHeaders();\n\n      let __body = null;\n      let req = new HttpRequest('GET', this.rootUrl + `gestimoweb/api/v1/immeuble/findByName/${name}`, __body, {\n        headers: __headers,\n        params: __params,\n        responseType: 'json'\n      });\n      return this.http.request(req).pipe(__filter(_r => _r instanceof HttpResponse), __map(_r => {\n        return _r;\n      }));\n    }\n    /**\n     * @param name undefined\n     * @return successful operation\n     */\n\n\n    findImmeubleByName(name) {\n      return this.findImmeubleByNameResponse(name).pipe(__map(_r => _r.body));\n    }\n    /**\n     * @param body undefined\n     * @return successful operation\n     */\n\n\n    saveImmeubleResponse(body) {\n      let __params = this.newParams();\n\n      let __headers = new HttpHeaders();\n\n      let __body = null;\n      __body = body;\n      let req = new HttpRequest('POST', this.rootUrl + `gestimoweb/api/v1/immeuble/save`, __body, {\n        headers: __headers,\n        params: __params,\n        responseType: 'json'\n      });\n      return this.http.request(req).pipe(__filter(_r => _r instanceof HttpResponse), __map(_r => {\n        return _r;\n      }));\n    }\n    /**\n     * @param body undefined\n     * @return successful operation\n     */\n\n\n    saveImmeuble(body) {\n      return this.saveImmeubleResponse(body).pipe(__map(_r => _r.body));\n    }\n    /**\n     * @return successful operation\n     */\n\n\n    findAllMagasinResponse() {\n      let __params = this.newParams();\n\n      let __headers = new HttpHeaders();\n\n      let __body = null;\n      let req = new HttpRequest('GET', this.rootUrl + `gestimoweb/api/v1/magasin/all`, __body, {\n        headers: __headers,\n        params: __params,\n        responseType: 'json'\n      });\n      return this.http.request(req).pipe(__filter(_r => _r instanceof HttpResponse), __map(_r => {\n        return _r;\n      }));\n    }\n    /**\n     * @return successful operation\n     */\n\n\n    findAllMagasin() {\n      return this.findAllMagasinResponse().pipe(__map(_r => _r.body));\n    }\n    /**\n     * @param idSite undefined\n     * @return successful operation\n     */\n\n\n    findAllMagasinByIdSiteResponse(idSite) {\n      let __params = this.newParams();\n\n      let __headers = new HttpHeaders();\n\n      let __body = null;\n      let req = new HttpRequest('GET', this.rootUrl + `gestimoweb/api/v1/magasin/findAllMagasinByIdSite/${idSite}`, __body, {\n        headers: __headers,\n        params: __params,\n        responseType: 'json'\n      });\n      return this.http.request(req).pipe(__filter(_r => _r instanceof HttpResponse), __map(_r => {\n        return _r;\n      }));\n    }\n    /**\n     * @param idSite undefined\n     * @return successful operation\n     */\n\n\n    findAllMagasinByIdSite(idSite) {\n      return this.findAllMagasinByIdSiteResponse(idSite).pipe(__map(_r => _r.body));\n    }\n    /**\n     * @param name undefined\n     * @return successful operation\n     */\n\n\n    findByNameMagasinDtoResponse(name) {\n      let __params = this.newParams();\n\n      let __headers = new HttpHeaders();\n\n      let __body = null;\n      let req = new HttpRequest('GET', this.rootUrl + `gestimoweb/api/v1/magasin/findByName/${name}`, __body, {\n        headers: __headers,\n        params: __params,\n        responseType: 'json'\n      });\n      return this.http.request(req).pipe(__filter(_r => _r instanceof HttpResponse), __map(_r => {\n        return _r;\n      }));\n    }\n    /**\n     * @param name undefined\n     * @return successful operation\n     */\n\n\n    findByNameMagasinDto(name) {\n      return this.findByNameMagasinDtoResponse(name).pipe(__map(_r => _r.body));\n    }\n    /**\n     * @param id undefined\n     * @return successful operation\n     */\n\n\n    findByIDMagasinResponse(id) {\n      let __params = this.newParams();\n\n      let __headers = new HttpHeaders();\n\n      let __body = null;\n      let req = new HttpRequest('GET', this.rootUrl + `gestimoweb/api/v1/magasin/findmagasinById/${id}`, __body, {\n        headers: __headers,\n        params: __params,\n        responseType: 'json'\n      });\n      return this.http.request(req).pipe(__filter(_r => _r instanceof HttpResponse), __map(_r => {\n        return _r;\n      }));\n    }\n    /**\n     * @param id undefined\n     * @return successful operation\n     */\n\n\n    findByIDMagasin(id) {\n      return this.findByIDMagasinResponse(id).pipe(__map(_r => _r.body));\n    }\n    /**\n     * @param body undefined\n     * @return successful operation\n     */\n\n\n    saveMagasinResponse(body) {\n      let __params = this.newParams();\n\n      let __headers = new HttpHeaders();\n\n      let __body = null;\n      __body = body;\n      let req = new HttpRequest('POST', this.rootUrl + `gestimoweb/api/v1/magasin/save`, __body, {\n        headers: __headers,\n        params: __params,\n        responseType: 'text'\n      });\n      return this.http.request(req).pipe(__filter(_r => _r instanceof HttpResponse), __map(_r => {\n        return _r.clone({\n          body: _r.body === 'true'\n        });\n      }));\n    }\n    /**\n     * @param body undefined\n     * @return successful operation\n     */\n\n\n    saveMagasin(body) {\n      return this.saveMagasinResponse(body).pipe(__map(_r => _r.body));\n    }\n    /**\n     * @param body undefined\n     * @return successful operation\n     */\n\n\n    saveMontantLoyerBailResponse(body) {\n      let __params = this.newParams();\n\n      let __headers = new HttpHeaders();\n\n      let __body = null;\n      __body = body;\n      let req = new HttpRequest('POST', this.rootUrl + `gestimoweb/api/v1/montantloyerbail/save`, __body, {\n        headers: __headers,\n        params: __params,\n        responseType: 'text'\n      });\n      return this.http.request(req).pipe(__filter(_r => _r instanceof HttpResponse), __map(_r => {\n        return _r.clone({\n          body: _r.body === 'true'\n        });\n      }));\n    }\n    /**\n     * @param body undefined\n     * @return successful operation\n     */\n\n\n    saveMontantLoyerBail(body) {\n      return this.saveMontantLoyerBailResponse(body).pipe(__map(_r => _r.body));\n    }\n    /**\n     * @return successful operation\n     */\n\n\n    findAllPaysResponse() {\n      let __params = this.newParams();\n\n      let __headers = new HttpHeaders();\n\n      let __body = null;\n      let req = new HttpRequest('GET', this.rootUrl + `gestimoweb/api/v1/pays/all`, __body, {\n        headers: __headers,\n        params: __params,\n        responseType: 'json'\n      });\n      return this.http.request(req).pipe(__filter(_r => _r instanceof HttpResponse), __map(_r => {\n        return _r;\n      }));\n    }\n    /**\n     * @return successful operation\n     */\n\n\n    findAllPays() {\n      return this.findAllPaysResponse().pipe(__map(_r => _r.body));\n    }\n    /**\n     * @param id undefined\n     * @return successful operation\n     */\n\n\n    deletePaysResponse(id) {\n      let __params = this.newParams();\n\n      let __headers = new HttpHeaders();\n\n      let __body = null;\n      let req = new HttpRequest('DELETE', this.rootUrl + `gestimoweb/api/v1/pays/delete/${id}`, __body, {\n        headers: __headers,\n        params: __params,\n        responseType: 'text'\n      });\n      return this.http.request(req).pipe(__filter(_r => _r instanceof HttpResponse), __map(_r => {\n        return _r.clone({\n          body: _r.body === 'true'\n        });\n      }));\n    }\n    /**\n     * @param id undefined\n     * @return successful operation\n     */\n\n\n    deletePays(id) {\n      return this.deletePaysResponse(id).pipe(__map(_r => _r.body));\n    }\n    /**\n     * @param id undefined\n     * @return successful operation\n     */\n\n\n    findPaysByIDResponse(id) {\n      let __params = this.newParams();\n\n      let __headers = new HttpHeaders();\n\n      let __body = null;\n      let req = new HttpRequest('GET', this.rootUrl + `gestimoweb/api/v1/pays/findById/${id}`, __body, {\n        headers: __headers,\n        params: __params,\n        responseType: 'json'\n      });\n      return this.http.request(req).pipe(__filter(_r => _r instanceof HttpResponse), __map(_r => {\n        return _r;\n      }));\n    }\n    /**\n     * @param id undefined\n     * @return successful operation\n     */\n\n\n    findPaysByID(id) {\n      return this.findPaysByIDResponse(id).pipe(__map(_r => _r.body));\n    }\n    /**\n     * @param name undefined\n     * @return successful operation\n     */\n\n\n    findPaysByNameResponse(name) {\n      let __params = this.newParams();\n\n      let __headers = new HttpHeaders();\n\n      let __body = null;\n      let req = new HttpRequest('GET', this.rootUrl + `gestimoweb/api/v1/pays/findByName/${name}`, __body, {\n        headers: __headers,\n        params: __params,\n        responseType: 'json'\n      });\n      return this.http.request(req).pipe(__filter(_r => _r instanceof HttpResponse), __map(_r => {\n        return _r;\n      }));\n    }\n    /**\n     * @param name undefined\n     * @return successful operation\n     */\n\n\n    findPaysByName(name) {\n      return this.findPaysByNameResponse(name).pipe(__map(_r => _r.body));\n    }\n    /**\n     * @param body undefined\n     * @return successful operation\n     */\n\n\n    savePaysResponse(body) {\n      let __params = this.newParams();\n\n      let __headers = new HttpHeaders();\n\n      let __body = null;\n      __body = body;\n      let req = new HttpRequest('POST', this.rootUrl + `gestimoweb/api/v1/pays/save`, __body, {\n        headers: __headers,\n        params: __params,\n        responseType: 'json'\n      });\n      return this.http.request(req).pipe(__filter(_r => _r instanceof HttpResponse), __map(_r => {\n        return _r;\n      }));\n    }\n    /**\n     * @param body undefined\n     * @return successful operation\n     */\n\n\n    savePays(body) {\n      return this.savePaysResponse(body).pipe(__map(_r => _r.body));\n    }\n    /**\n     * @param id undefined\n     * @return successful operation\n     */\n\n\n    sampleQuitanceResponse(id) {\n      let __params = this.newParams();\n\n      let __headers = new HttpHeaders();\n\n      let __body = null;\n      let req = new HttpRequest('GET', this.rootUrl + `gestimoweb/api/v1/print/quittance/${id}`, __body, {\n        headers: __headers,\n        params: __params,\n        responseType: 'json'\n      });\n      return this.http.request(req).pipe(__filter(_r => _r instanceof HttpResponse), __map(_r => {\n        return _r;\n      }));\n    }\n    /**\n     * @param id undefined\n     * @return successful operation\n     */\n\n\n    sampleQuitance(id) {\n      return this.sampleQuitanceResponse(id).pipe(__map(_r => _r.body));\n    }\n    /**\n     * @return successful operation\n     */\n\n\n    findAllQuartiersResponse() {\n      let __params = this.newParams();\n\n      let __headers = new HttpHeaders();\n\n      let __body = null;\n      let req = new HttpRequest('GET', this.rootUrl + `gestimoweb/api/v1/quartier/all`, __body, {\n        headers: __headers,\n        params: __params,\n        responseType: 'json'\n      });\n      return this.http.request(req).pipe(__filter(_r => _r instanceof HttpResponse), __map(_r => {\n        return _r;\n      }));\n    }\n    /**\n     * @return successful operation\n     */\n\n\n    findAllQuartiers() {\n      return this.findAllQuartiersResponse().pipe(__map(_r => _r.body));\n    }\n    /**\n     * @param id undefined\n     * @return successful operation\n     */\n\n\n    deleteQuartierResponse(id) {\n      let __params = this.newParams();\n\n      let __headers = new HttpHeaders();\n\n      let __body = null;\n      let req = new HttpRequest('DELETE', this.rootUrl + `gestimoweb/api/v1/quartier/delete/${id}`, __body, {\n        headers: __headers,\n        params: __params,\n        responseType: 'text'\n      });\n      return this.http.request(req).pipe(__filter(_r => _r instanceof HttpResponse), __map(_r => {\n        return _r.clone({\n          body: _r.body === 'true'\n        });\n      }));\n    }\n    /**\n     * @param id undefined\n     * @return successful operation\n     */\n\n\n    deleteQuartier(id) {\n      return this.deleteQuartierResponse(id).pipe(__map(_r => _r.body));\n    }\n    /**\n     * @param id undefined\n     * @return successful operation\n     */\n\n\n    findByIDQuartiersResponse(id) {\n      let __params = this.newParams();\n\n      let __headers = new HttpHeaders();\n\n      let __body = null;\n      let req = new HttpRequest('GET', this.rootUrl + `gestimoweb/api/v1/quartier/findById/${id}`, __body, {\n        headers: __headers,\n        params: __params,\n        responseType: 'json'\n      });\n      return this.http.request(req).pipe(__filter(_r => _r instanceof HttpResponse), __map(_r => {\n        return _r;\n      }));\n    }\n    /**\n     * @param id undefined\n     * @return successful operation\n     */\n\n\n    findByIDQuartiers(id) {\n      return this.findByIDQuartiersResponse(id).pipe(__map(_r => _r.body));\n    }\n    /**\n     * @param id undefined\n     * @return successful operation\n     */\n\n\n    findAllQuartierByIdCommuneResponse(id) {\n      let __params = this.newParams();\n\n      let __headers = new HttpHeaders();\n\n      let __body = null;\n      let req = new HttpRequest('GET', this.rootUrl + `gestimoweb/api/v1/quartier/findByIdCommune/${id}`, __body, {\n        headers: __headers,\n        params: __params,\n        responseType: 'json'\n      });\n      return this.http.request(req).pipe(__filter(_r => _r instanceof HttpResponse), __map(_r => {\n        return _r;\n      }));\n    }\n    /**\n     * @param id undefined\n     * @return successful operation\n     */\n\n\n    findAllQuartierByIdCommune(id) {\n      return this.findAllQuartierByIdCommuneResponse(id).pipe(__map(_r => _r.body));\n    }\n    /**\n     * @param name undefined\n     * @return successful operation\n     */\n\n\n    findByNameQuartierResponse(name) {\n      let __params = this.newParams();\n\n      let __headers = new HttpHeaders();\n\n      let __body = null;\n      let req = new HttpRequest('GET', this.rootUrl + `gestimoweb/api/v1/quartier/findByName/${name}`, __body, {\n        headers: __headers,\n        params: __params,\n        responseType: 'json'\n      });\n      return this.http.request(req).pipe(__filter(_r => _r instanceof HttpResponse), __map(_r => {\n        return _r;\n      }));\n    }\n    /**\n     * @param name undefined\n     * @return successful operation\n     */\n\n\n    findByNameQuartier(name) {\n      return this.findByNameQuartierResponse(name).pipe(__map(_r => _r.body));\n    }\n    /**\n     * @param body undefined\n     * @return successful operation\n     */\n\n\n    saveQuartierResponse(body) {\n      let __params = this.newParams();\n\n      let __headers = new HttpHeaders();\n\n      let __body = null;\n      __body = body;\n      let req = new HttpRequest('POST', this.rootUrl + `gestimoweb/api/v1/quartier/save`, __body, {\n        headers: __headers,\n        params: __params,\n        responseType: 'json'\n      });\n      return this.http.request(req).pipe(__filter(_r => _r instanceof HttpResponse), __map(_r => {\n        return _r;\n      }));\n    }\n    /**\n     * @param body undefined\n     * @return successful operation\n     */\n\n\n    saveQuartier(body) {\n      return this.saveQuartierResponse(body).pipe(__map(_r => _r.body));\n    }\n    /**\n     * @return successful operation\n     */\n\n\n    findAllSitesResponse() {\n      let __params = this.newParams();\n\n      let __headers = new HttpHeaders();\n\n      let __body = null;\n      let req = new HttpRequest('GET', this.rootUrl + `gestimoweb/api/v1/sites/all`, __body, {\n        headers: __headers,\n        params: __params,\n        responseType: 'json'\n      });\n      return this.http.request(req).pipe(__filter(_r => _r instanceof HttpResponse), __map(_r => {\n        return _r;\n      }));\n    }\n    /**\n     * @return successful operation\n     */\n\n\n    findAllSites() {\n      return this.findAllSitesResponse().pipe(__map(_r => _r.body));\n    }\n    /**\n     * @param id undefined\n     * @return successful operation\n     */\n\n\n    deleteSiteResponse(id) {\n      let __params = this.newParams();\n\n      let __headers = new HttpHeaders();\n\n      let __body = null;\n      let req = new HttpRequest('DELETE', this.rootUrl + `gestimoweb/api/v1/sites/delete/${id}`, __body, {\n        headers: __headers,\n        params: __params,\n        responseType: 'text'\n      });\n      return this.http.request(req).pipe(__filter(_r => _r instanceof HttpResponse), __map(_r => {\n        return _r.clone({\n          body: _r.body === 'true'\n        });\n      }));\n    }\n    /**\n     * @param id undefined\n     * @return successful operation\n     */\n\n\n    deleteSite(id) {\n      return this.deleteSiteResponse(id).pipe(__map(_r => _r.body));\n    }\n    /**\n     * @param id undefined\n     * @return successful operation\n     */\n\n\n    findSiteByIDResponse(id) {\n      let __params = this.newParams();\n\n      let __headers = new HttpHeaders();\n\n      let __body = null;\n      let req = new HttpRequest('GET', this.rootUrl + `gestimoweb/api/v1/sites/findById/${id}`, __body, {\n        headers: __headers,\n        params: __params,\n        responseType: 'json'\n      });\n      return this.http.request(req).pipe(__filter(_r => _r instanceof HttpResponse), __map(_r => {\n        return _r;\n      }));\n    }\n    /**\n     * @param id undefined\n     * @return successful operation\n     */\n\n\n    findSiteByID(id) {\n      return this.findSiteByIDResponse(id).pipe(__map(_r => _r.body));\n    }\n    /**\n     * @param name undefined\n     * @return successful operation\n     */\n\n\n    findSiteByNameResponse(name) {\n      let __params = this.newParams();\n\n      let __headers = new HttpHeaders();\n\n      let __body = null;\n      let req = new HttpRequest('GET', this.rootUrl + `gestimoweb/api/v1/sites/findByName/${name}`, __body, {\n        headers: __headers,\n        params: __params,\n        responseType: 'json'\n      });\n      return this.http.request(req).pipe(__filter(_r => _r instanceof HttpResponse), __map(_r => {\n        return _r;\n      }));\n    }\n    /**\n     * @param name undefined\n     * @return successful operation\n     */\n\n\n    findSiteByName(name) {\n      return this.findSiteByNameResponse(name).pipe(__map(_r => _r.body));\n    }\n    /**\n     * @param body undefined\n     * @return successful operation\n     */\n\n\n    saveSiteResponse(body) {\n      let __params = this.newParams();\n\n      let __headers = new HttpHeaders();\n\n      let __body = null;\n      __body = body;\n      let req = new HttpRequest('POST', this.rootUrl + `gestimoweb/api/v1/sites/save`, __body, {\n        headers: __headers,\n        params: __params,\n        responseType: 'text'\n      });\n      return this.http.request(req).pipe(__filter(_r => _r instanceof HttpResponse), __map(_r => {\n        return _r.clone({\n          body: _r.body === 'true'\n        });\n      }));\n    }\n    /**\n     * @param body undefined\n     * @return successful operation\n     */\n\n\n    saveSite(body) {\n      return this.saveSiteResponse(body).pipe(__map(_r => _r.body));\n    }\n    /**\n     * @return successful operation\n     */\n\n\n    findAllStudiosResponse() {\n      let __params = this.newParams();\n\n      let __headers = new HttpHeaders();\n\n      let __body = null;\n      let req = new HttpRequest('GET', this.rootUrl + `gestimoweb/api/v1/studio/all`, __body, {\n        headers: __headers,\n        params: __params,\n        responseType: 'json'\n      });\n      return this.http.request(req).pipe(__filter(_r => _r instanceof HttpResponse), __map(_r => {\n        return _r;\n      }));\n    }\n    /**\n     * @return successful operation\n     */\n\n\n    findAllStudios() {\n      return this.findAllStudiosResponse().pipe(__map(_r => _r.body));\n    }\n    /**\n     * @param id undefined\n     * @return successful operation\n     */\n\n\n    deleteStudioResponse(id) {\n      let __params = this.newParams();\n\n      let __headers = new HttpHeaders();\n\n      let __body = null;\n      let req = new HttpRequest('DELETE', this.rootUrl + `gestimoweb/api/v1/studio/delete/${id}`, __body, {\n        headers: __headers,\n        params: __params,\n        responseType: 'text'\n      });\n      return this.http.request(req).pipe(__filter(_r => _r instanceof HttpResponse), __map(_r => {\n        return _r.clone({\n          body: _r.body === 'true'\n        });\n      }));\n    }\n    /**\n     * @param id undefined\n     * @return successful operation\n     */\n\n\n    deleteStudio(id) {\n      return this.deleteStudioResponse(id).pipe(__map(_r => _r.body));\n    }\n    /**\n     * @param id undefined\n     * @return successful operation\n     */\n\n\n    findStudioByIDResponse(id) {\n      let __params = this.newParams();\n\n      let __headers = new HttpHeaders();\n\n      let __body = null;\n      let req = new HttpRequest('GET', this.rootUrl + `gestimoweb/api/v1/studio/findById/${id}`, __body, {\n        headers: __headers,\n        params: __params,\n        responseType: 'json'\n      });\n      return this.http.request(req).pipe(__filter(_r => _r instanceof HttpResponse), __map(_r => {\n        return _r;\n      }));\n    }\n    /**\n     * @param id undefined\n     * @return successful operation\n     */\n\n\n    findStudioByID(id) {\n      return this.findStudioByIDResponse(id).pipe(__map(_r => _r.body));\n    }\n    /**\n     * @param id undefined\n     * @return successful operation\n     */\n\n\n    findAllStudioByIdPaysResponse(id) {\n      let __params = this.newParams();\n\n      let __headers = new HttpHeaders();\n\n      let __body = null;\n      let req = new HttpRequest('GET', this.rootUrl + `gestimoweb/api/v1/studio/findByIdEtage/${id}`, __body, {\n        headers: __headers,\n        params: __params,\n        responseType: 'json'\n      });\n      return this.http.request(req).pipe(__filter(_r => _r instanceof HttpResponse), __map(_r => {\n        return _r;\n      }));\n    }\n    /**\n     * @param id undefined\n     * @return successful operation\n     */\n\n\n    findAllStudioByIdPays(id) {\n      return this.findAllStudioByIdPaysResponse(id).pipe(__map(_r => _r.body));\n    }\n    /**\n     * @param name undefined\n     * @return successful operation\n     */\n\n\n    findStudioByNameResponse(name) {\n      let __params = this.newParams();\n\n      let __headers = new HttpHeaders();\n\n      let __body = null;\n      let req = new HttpRequest('GET', this.rootUrl + `gestimoweb/api/v1/studio/findByName/${name}`, __body, {\n        headers: __headers,\n        params: __params,\n        responseType: 'json'\n      });\n      return this.http.request(req).pipe(__filter(_r => _r instanceof HttpResponse), __map(_r => {\n        return _r;\n      }));\n    }\n    /**\n     * @param name undefined\n     * @return successful operation\n     */\n\n\n    findStudioByName(name) {\n      return this.findStudioByNameResponse(name).pipe(__map(_r => _r.body));\n    }\n    /**\n     * @param body undefined\n     * @return successful operation\n     */\n\n\n    saveStudioResponse(body) {\n      let __params = this.newParams();\n\n      let __headers = new HttpHeaders();\n\n      let __body = null;\n      __body = body;\n      let req = new HttpRequest('POST', this.rootUrl + `gestimoweb/api/v1/studio/save`, __body, {\n        headers: __headers,\n        params: __params,\n        responseType: 'text'\n      });\n      return this.http.request(req).pipe(__filter(_r => _r instanceof HttpResponse), __map(_r => {\n        return _r.clone({\n          body: _r.body === 'true'\n        });\n      }));\n    }\n    /**\n     * @param body undefined\n     * @return successful operation\n     */\n\n\n    saveStudio(body) {\n      return this.saveStudioResponse(body).pipe(__map(_r => _r.body));\n    }\n    /**\n     * @return successful operation\n     */\n\n\n    getAllUtilisateursByOrderResponse() {\n      let __params = this.newParams();\n\n      let __headers = new HttpHeaders();\n\n      let __body = null;\n      let req = new HttpRequest('GET', this.rootUrl + `gestimoweb/api/v1/utilisateur/all`, __body, {\n        headers: __headers,\n        params: __params,\n        responseType: 'json'\n      });\n      return this.http.request(req).pipe(__filter(_r => _r instanceof HttpResponse), __map(_r => {\n        return _r;\n      }));\n    }\n    /**\n     * @return successful operation\n     */\n\n\n    getAllUtilisateursByOrder() {\n      return this.getAllUtilisateursByOrderResponse().pipe(__map(_r => _r.body));\n    }\n    /**\n     * @return successful operation\n     */\n\n\n    getAllGerantsByOrderResponse() {\n      let __params = this.newParams();\n\n      let __headers = new HttpHeaders();\n\n      let __body = null;\n      let req = new HttpRequest('GET', this.rootUrl + `gestimoweb/api/v1/utilisateur/gerants/all`, __body, {\n        headers: __headers,\n        params: __params,\n        responseType: 'json'\n      });\n      return this.http.request(req).pipe(__filter(_r => _r instanceof HttpResponse), __map(_r => {\n        return _r;\n      }));\n    }\n    /**\n     * @return successful operation\n     */\n\n\n    getAllGerantsByOrder() {\n      return this.getAllGerantsByOrderResponse().pipe(__map(_r => _r.body));\n    }\n    /**\n     * @param email undefined\n     * @return successful operation\n     */\n\n\n    getUtilisateurByEmailResponse(email) {\n      let __params = this.newParams();\n\n      let __headers = new HttpHeaders();\n\n      let __body = null;\n      let req = new HttpRequest('GET', this.rootUrl + `gestimoweb/api/v1/utilisateur/getutilisateurbyemail/${email}`, __body, {\n        headers: __headers,\n        params: __params,\n        responseType: 'json'\n      });\n      return this.http.request(req).pipe(__filter(_r => _r instanceof HttpResponse), __map(_r => {\n        return _r;\n      }));\n    }\n    /**\n     * @param email undefined\n     * @return successful operation\n     */\n\n\n    getUtilisateurByEmail(email) {\n      return this.getUtilisateurByEmailResponse(email).pipe(__map(_r => _r.body));\n    }\n    /**\n     * @param id undefined\n     * @return successful operation\n     */\n\n\n    getUtilisateurByIDResponse(id) {\n      let __params = this.newParams();\n\n      let __headers = new HttpHeaders();\n\n      let __body = null;\n      let req = new HttpRequest('GET', this.rootUrl + `gestimoweb/api/v1/utilisateur/getutilisateurbyid/${id}`, __body, {\n        headers: __headers,\n        params: __params,\n        responseType: 'json'\n      });\n      return this.http.request(req).pipe(__filter(_r => _r instanceof HttpResponse), __map(_r => {\n        return _r;\n      }));\n    }\n    /**\n     * @param id undefined\n     * @return successful operation\n     */\n\n\n    getUtilisateurByID(id) {\n      return this.getUtilisateurByIDResponse(id).pipe(__map(_r => _r.body));\n    }\n    /**\n     * @param username undefined\n     * @return successful operation\n     */\n\n\n    getUtilisateurByUsernameResponse(username) {\n      let __params = this.newParams();\n\n      let __headers = new HttpHeaders();\n\n      let __body = null;\n      let req = new HttpRequest('GET', this.rootUrl + `gestimoweb/api/v1/utilisateur/getutilisateurbyusername/${username}`, __body, {\n        headers: __headers,\n        params: __params,\n        responseType: 'json'\n      });\n      return this.http.request(req).pipe(__filter(_r => _r instanceof HttpResponse), __map(_r => {\n        return _r;\n      }));\n    }\n    /**\n     * @param username undefined\n     * @return successful operation\n     */\n\n\n    getUtilisateurByUsername(username) {\n      return this.getUtilisateurByUsernameResponse(username).pipe(__map(_r => _r.body));\n    }\n    /**\n     * @return successful operation\n     */\n\n\n    getAllLocatairesByOrderResponse() {\n      let __params = this.newParams();\n\n      let __headers = new HttpHeaders();\n\n      let __body = null;\n      let req = new HttpRequest('GET', this.rootUrl + `gestimoweb/api/v1/utilisateur/locataires/all`, __body, {\n        headers: __headers,\n        params: __params,\n        responseType: 'json'\n      });\n      return this.http.request(req).pipe(__filter(_r => _r instanceof HttpResponse), __map(_r => {\n        return _r;\n      }));\n    }\n    /**\n     * @return successful operation\n     */\n\n\n    getAllLocatairesByOrder() {\n      return this.getAllLocatairesByOrderResponse().pipe(__map(_r => _r.body));\n    }\n    /**\n     * @return successful operation\n     */\n\n\n    getAllProprietaireByOrderResponse() {\n      let __params = this.newParams();\n\n      let __headers = new HttpHeaders();\n\n      let __body = null;\n      let req = new HttpRequest('GET', this.rootUrl + `gestimoweb/api/v1/utilisateur/proprietaires/all`, __body, {\n        headers: __headers,\n        params: __params,\n        responseType: 'json'\n      });\n      return this.http.request(req).pipe(__filter(_r => _r instanceof HttpResponse), __map(_r => {\n        return _r;\n      }));\n    }\n    /**\n     * @return successful operation\n     */\n\n\n    getAllProprietaireByOrder() {\n      return this.getAllProprietaireByOrderResponse().pipe(__map(_r => _r.body));\n    }\n    /**\n     * @param body undefined\n     * @return successful operation\n     */\n\n\n    saveUtilisateurResponse(body) {\n      let __params = this.newParams();\n\n      let __headers = new HttpHeaders();\n\n      let __body = null;\n      __body = body;\n      let req = new HttpRequest('POST', this.rootUrl + `gestimoweb/api/v1/utilisateur/save`, __body, {\n        headers: __headers,\n        params: __params,\n        responseType: 'text'\n      });\n      return this.http.request(req).pipe(__filter(_r => _r instanceof HttpResponse), __map(_r => {\n        return _r.clone({\n          body: _r.body === 'true'\n        });\n      }));\n    }\n    /**\n     * @param body undefined\n     * @return successful operation\n     */\n\n\n    saveUtilisateur(body) {\n      return this.saveUtilisateurResponse(body).pipe(__map(_r => _r.body));\n    }\n    /**\n     * @return successful operation\n     */\n\n\n    getAllSuperviseursByOrderResponse() {\n      let __params = this.newParams();\n\n      let __headers = new HttpHeaders();\n\n      let __body = null;\n      let req = new HttpRequest('GET', this.rootUrl + `gestimoweb/api/v1/utilisateur/superviseurs/all`, __body, {\n        headers: __headers,\n        params: __params,\n        responseType: 'json'\n      });\n      return this.http.request(req).pipe(__filter(_r => _r instanceof HttpResponse), __map(_r => {\n        return _r;\n      }));\n    }\n    /**\n     * @return successful operation\n     */\n\n\n    getAllSuperviseursByOrder() {\n      return this.getAllSuperviseursByOrderResponse().pipe(__map(_r => _r.body));\n    }\n    /**\n     * @return successful operation\n     */\n\n\n    findAllVillaResponse() {\n      let __params = this.newParams();\n\n      let __headers = new HttpHeaders();\n\n      let __body = null;\n      let req = new HttpRequest('GET', this.rootUrl + `gestimoweb/api/v1/villa/all`, __body, {\n        headers: __headers,\n        params: __params,\n        responseType: 'json'\n      });\n      return this.http.request(req).pipe(__filter(_r => _r instanceof HttpResponse), __map(_r => {\n        return _r;\n      }));\n    }\n    /**\n     * @return successful operation\n     */\n\n\n    findAllVilla() {\n      return this.findAllVillaResponse().pipe(__map(_r => _r.body));\n    }\n    /**\n     * @param body undefined\n     * @return successful operation\n     */\n\n\n    saveVillaResponse(body) {\n      let __params = this.newParams();\n\n      let __headers = new HttpHeaders();\n\n      let __body = null;\n      __body = body;\n      let req = new HttpRequest('POST', this.rootUrl + `gestimoweb/api/v1/villa/save`, __body, {\n        headers: __headers,\n        params: __params,\n        responseType: 'text'\n      });\n      return this.http.request(req).pipe(__filter(_r => _r instanceof HttpResponse), __map(_r => {\n        return _r.clone({\n          body: _r.body === 'true'\n        });\n      }));\n    }\n    /**\n     * @param body undefined\n     * @return successful operation\n     */\n\n\n    saveVilla(body) {\n      return this.saveVillaResponse(body).pipe(__map(_r => _r.body));\n    }\n    /**\n     * @return successful operation\n     */\n\n\n    findAllVillesResponse() {\n      let __params = this.newParams();\n\n      let __headers = new HttpHeaders();\n\n      let __body = null;\n      let req = new HttpRequest('GET', this.rootUrl + `gestimoweb/api/v1/ville/all`, __body, {\n        headers: __headers,\n        params: __params,\n        responseType: 'json'\n      });\n      return this.http.request(req).pipe(__filter(_r => _r instanceof HttpResponse), __map(_r => {\n        return _r;\n      }));\n    }\n    /**\n     * @return successful operation\n     */\n\n\n    findAllVilles() {\n      return this.findAllVillesResponse().pipe(__map(_r => _r.body));\n    }\n    /**\n     * @param id undefined\n     * @return successful operation\n     */\n\n\n    deleteVilleResponse(id) {\n      let __params = this.newParams();\n\n      let __headers = new HttpHeaders();\n\n      let __body = null;\n      let req = new HttpRequest('DELETE', this.rootUrl + `gestimoweb/api/v1/ville/delete/${id}`, __body, {\n        headers: __headers,\n        params: __params,\n        responseType: 'text'\n      });\n      return this.http.request(req).pipe(__filter(_r => _r instanceof HttpResponse), __map(_r => {\n        return _r.clone({\n          body: _r.body === 'true'\n        });\n      }));\n    }\n    /**\n     * @param id undefined\n     * @return successful operation\n     */\n\n\n    deleteVille(id) {\n      return this.deleteVilleResponse(id).pipe(__map(_r => _r.body));\n    }\n    /**\n     * @param id undefined\n     * @return successful operation\n     */\n\n\n    findByIdVilleResponse(id) {\n      let __params = this.newParams();\n\n      let __headers = new HttpHeaders();\n\n      let __body = null;\n      let req = new HttpRequest('GET', this.rootUrl + `gestimoweb/api/v1/ville/findById/${id}`, __body, {\n        headers: __headers,\n        params: __params,\n        responseType: 'json'\n      });\n      return this.http.request(req).pipe(__filter(_r => _r instanceof HttpResponse), __map(_r => {\n        return _r;\n      }));\n    }\n    /**\n     * @param id undefined\n     * @return successful operation\n     */\n\n\n    findByIdVille(id) {\n      return this.findByIdVilleResponse(id).pipe(__map(_r => _r.body));\n    }\n    /**\n     * @param id undefined\n     * @return successful operation\n     */\n\n\n    findAllVilleByIdPaysResponse(id) {\n      let __params = this.newParams();\n\n      let __headers = new HttpHeaders();\n\n      let __body = null;\n      let req = new HttpRequest('GET', this.rootUrl + `gestimoweb/api/v1/ville/findByIdPays/${id}`, __body, {\n        headers: __headers,\n        params: __params,\n        responseType: 'json'\n      });\n      return this.http.request(req).pipe(__filter(_r => _r instanceof HttpResponse), __map(_r => {\n        return _r;\n      }));\n    }\n    /**\n     * @param id undefined\n     * @return successful operation\n     */\n\n\n    findAllVilleByIdPays(id) {\n      return this.findAllVilleByIdPaysResponse(id).pipe(__map(_r => _r.body));\n    }\n    /**\n     * @param name undefined\n     * @return successful operation\n     */\n\n\n    findVilleByNameVilleResponse(name) {\n      let __params = this.newParams();\n\n      let __headers = new HttpHeaders();\n\n      let __body = null;\n      let req = new HttpRequest('GET', this.rootUrl + `gestimoweb/api/v1/ville/findByName/${name}`, __body, {\n        headers: __headers,\n        params: __params,\n        responseType: 'json'\n      });\n      return this.http.request(req).pipe(__filter(_r => _r instanceof HttpResponse), __map(_r => {\n        return _r;\n      }));\n    }\n    /**\n     * @param name undefined\n     * @return successful operation\n     */\n\n\n    findVilleByNameVille(name) {\n      return this.findVilleByNameVilleResponse(name).pipe(__map(_r => _r.body));\n    }\n    /**\n     * @param body undefined\n     * @return successful operation\n     */\n\n\n    findAllVilleByPaysObjectResponse(body) {\n      let __params = this.newParams();\n\n      let __headers = new HttpHeaders();\n\n      let __body = null;\n      __body = body;\n      let req = new HttpRequest('GET', this.rootUrl + `gestimoweb/api/v1/ville/findByPays`, __body, {\n        headers: __headers,\n        params: __params,\n        responseType: 'json'\n      });\n      return this.http.request(req).pipe(__filter(_r => _r instanceof HttpResponse), __map(_r => {\n        return _r;\n      }));\n    }\n    /**\n     * @param body undefined\n     * @return successful operation\n     */\n\n\n    findAllVilleByPaysObject(body) {\n      return this.findAllVilleByPaysObjectResponse(body).pipe(__map(_r => _r.body));\n    }\n    /**\n     * @param body undefined\n     * @return successful operation\n     */\n\n\n    saveVilleResponse(body) {\n      let __params = this.newParams();\n\n      let __headers = new HttpHeaders();\n\n      let __body = null;\n      __body = body;\n      let req = new HttpRequest('POST', this.rootUrl + `gestimoweb/api/v1/ville/save`, __body, {\n        headers: __headers,\n        params: __params,\n        responseType: 'json'\n      });\n      return this.http.request(req).pipe(__filter(_r => _r instanceof HttpResponse), __map(_r => {\n        return _r;\n      }));\n    }\n    /**\n     * @param body undefined\n     * @return successful operation\n     */\n\n\n    saveVille(body) {\n      return this.saveVilleResponse(body).pipe(__map(_r => _r.body));\n    }\n\n  }\n\n  ApiService.getAllAgenceByOrderAgencePath = 'gestimoweb/api/v1/agences/all';\n  ApiService.deleteAgenceByIdAgencePath = 'gestimoweb/api/v1/agences/deleteagence/{id}';\n  ApiService.getAgenceByEmailAgencePath = 'gestimoweb/api/v1/agences/getagencebyemail/{email}';\n  ApiService.getAgenceByIDAgencePath = 'gestimoweb/api/v1/agences/getagencebyid/{id}';\n  ApiService.authenticateAgencePath = 'gestimoweb/api/v1/agences/signup';\n  ApiService.findAllAppartementPath = 'gestimoweb/api/v1/appartement/all';\n  ApiService.deleteAppartementPath = 'gestimoweb/api/v1/appartement/delete/{id}';\n  ApiService.findByIDAppartementPath = 'gestimoweb/api/v1/appartement/findById/{id}';\n  ApiService.findByIdEtageAppartementPath = 'gestimoweb/api/v1/appartement/findByIdEtage/{id}';\n  ApiService.findByNameAppartementPath = 'gestimoweb/api/v1/appartement/findByName/{name}';\n  ApiService.saveAppartementPath = 'gestimoweb/api/v1/appartement/save';\n  ApiService.saveAppelLoyersPath = 'gestimoweb/api/v1/appelloyer/save';\n  ApiService.verifyAccountPath = 'gestimoweb/api/v1/auth/accountVerification/{token}';\n  ApiService.loginPath = 'gestimoweb/api/v1/auth/login';\n  ApiService.findAllBailAppartementPath = 'gestimoweb/api/v1/bailappartement/all';\n  ApiService.deleteBailAppartementPath = 'gestimoweb/api/v1/bailappartement/delete/{id}';\n  ApiService.findByIDBailAppartementPath = 'gestimoweb/api/v1/bailappartement/findById/{id}';\n  ApiService.findByNameBailAppartementPath = 'gestimoweb/api/v1/bailappartement/findByName/{name}';\n  ApiService.saveBailAppartementPath = 'gestimoweb/api/v1/bailappartement/save';\n  ApiService.findAllBailMagasinPath = 'gestimoweb/api/v1/bailmagasin/all';\n  ApiService.deleteBailMagasinPath = 'gestimoweb/api/v1/bailmagasin/delete/{id}';\n  ApiService.findByIDBailMagasinPath = 'gestimoweb/api/v1/bailmagasin/findById/{id}';\n  ApiService.findByNameBailMagasinPath = 'gestimoweb/api/v1/bailmagasin/findByName/{name}';\n  ApiService.saveBailMagasinPath = 'gestimoweb/api/v1/bailmagasin/save';\n  ApiService.findAllBailStudioPath = 'gestimoweb/api/v1/bailsudio/all';\n  ApiService.deleteBailStudioPath = 'gestimoweb/api/v1/bailsudio/delete/{id}';\n  ApiService.findBailStudioByIDPath = 'gestimoweb/api/v1/bailsudio/findById/{id}';\n  ApiService.findBailStudioByNamePath = 'gestimoweb/api/v1/bailsudio/findByName/{name}';\n  ApiService.saveBailStudioPath = 'gestimoweb/api/v1/bailsudio/save';\n  ApiService.findAllBailVillaPath = 'gestimoweb/api/v1/bailvilla/all';\n  ApiService.deleteBailVillaPath = 'gestimoweb/api/v1/bailvilla/delete/{id}';\n  ApiService.findBailVillaByIDPath = 'gestimoweb/api/v1/bailvilla/findById/{id}';\n  ApiService.findBailVillaByNamePath = 'gestimoweb/api/v1/bailvilla/findByName/{name}';\n  ApiService.saveBailVillaPath = 'gestimoweb/api/v1/bailvilla/save';\n  ApiService.findAllBienPath = 'gestimoweb/api/v1/bienImmobilier/all';\n  ApiService.findAllCommunePath = 'gestimoweb/api/v1/commune/all';\n  ApiService.deleteCommunePath = 'gestimoweb/api/v1/commune/delete/{id}';\n  ApiService.findCommuneByIDPath = 'gestimoweb/api/v1/commune/findById/{id}';\n  ApiService.findCommuneByIdPaysPath = 'gestimoweb/api/v1/commune/findByIdVille/{id}';\n  ApiService.findCommuneByNamePath = 'gestimoweb/api/v1/commune/findByName/{name}';\n  ApiService.saveCommunePath = 'gestimoweb/api/v1/commune/save';\n  ApiService.saveEspeceEncaissementPath = 'gestimoweb/api/v1/especeencaissement/save';\n  ApiService.findAllEtagePath = 'gestimoweb/api/v1/etage/all';\n  ApiService.deleteEtagePath = 'gestimoweb/api/v1/etage/delete/{id}';\n  ApiService.findEtageByIDPath = 'gestimoweb/api/v1/etage/findById/{id}';\n  ApiService.findEtageByIdPaysPath = 'gestimoweb/api/v1/etage/findByIdImmeuble/{id}';\n  ApiService.findEtageByNamePath = 'gestimoweb/api/v1/etage/findByName/{name}';\n  ApiService.saveEtagePath = 'gestimoweb/api/v1/etage/save';\n  ApiService.findAllImmeublePath = 'gestimoweb/api/v1/immeuble/all';\n  ApiService.deleteImmeublePath = 'gestimoweb/api/v1/immeuble/deleteImmeuble/{id}';\n  ApiService.findImmeubleByIDPath = 'gestimoweb/api/v1/immeuble/findById/{id}';\n  ApiService.findImmeubleByIdSitePath = 'gestimoweb/api/v1/immeuble/findByIdSite/{id}';\n  ApiService.findImmeubleByNamePath = 'gestimoweb/api/v1/immeuble/findByName/{name}';\n  ApiService.saveImmeublePath = 'gestimoweb/api/v1/immeuble/save';\n  ApiService.findAllMagasinPath = 'gestimoweb/api/v1/magasin/all';\n  ApiService.findAllMagasinByIdSitePath = 'gestimoweb/api/v1/magasin/findAllMagasinByIdSite/{idSite}';\n  ApiService.findByNameMagasinDtoPath = 'gestimoweb/api/v1/magasin/findByName/{name}';\n  ApiService.findByIDMagasinPath = 'gestimoweb/api/v1/magasin/findmagasinById/{id}';\n  ApiService.saveMagasinPath = 'gestimoweb/api/v1/magasin/save';\n  ApiService.saveMontantLoyerBailPath = 'gestimoweb/api/v1/montantloyerbail/save';\n  ApiService.findAllPaysPath = 'gestimoweb/api/v1/pays/all';\n  ApiService.deletePaysPath = 'gestimoweb/api/v1/pays/delete/{id}';\n  ApiService.findPaysByIDPath = 'gestimoweb/api/v1/pays/findById/{id}';\n  ApiService.findPaysByNamePath = 'gestimoweb/api/v1/pays/findByName/{name}';\n  ApiService.savePaysPath = 'gestimoweb/api/v1/pays/save';\n  ApiService.sampleQuitancePath = 'gestimoweb/api/v1/print/quittance/{id}';\n  ApiService.findAllQuartiersPath = 'gestimoweb/api/v1/quartier/all';\n  ApiService.deleteQuartierPath = 'gestimoweb/api/v1/quartier/delete/{id}';\n  ApiService.findByIDQuartiersPath = 'gestimoweb/api/v1/quartier/findById/{id}';\n  ApiService.findAllQuartierByIdCommunePath = 'gestimoweb/api/v1/quartier/findByIdCommune/{id}';\n  ApiService.findByNameQuartierPath = 'gestimoweb/api/v1/quartier/findByName/{name}';\n  ApiService.saveQuartierPath = 'gestimoweb/api/v1/quartier/save';\n  ApiService.findAllSitesPath = 'gestimoweb/api/v1/sites/all';\n  ApiService.deleteSitePath = 'gestimoweb/api/v1/sites/delete/{id}';\n  ApiService.findSiteByIDPath = 'gestimoweb/api/v1/sites/findById/{id}';\n  ApiService.findSiteByNamePath = 'gestimoweb/api/v1/sites/findByName/{name}';\n  ApiService.saveSitePath = 'gestimoweb/api/v1/sites/save';\n  ApiService.findAllStudiosPath = 'gestimoweb/api/v1/studio/all';\n  ApiService.deleteStudioPath = 'gestimoweb/api/v1/studio/delete/{id}';\n  ApiService.findStudioByIDPath = 'gestimoweb/api/v1/studio/findById/{id}';\n  ApiService.findAllStudioByIdPaysPath = 'gestimoweb/api/v1/studio/findByIdEtage/{id}';\n  ApiService.findStudioByNamePath = 'gestimoweb/api/v1/studio/findByName/{name}';\n  ApiService.saveStudioPath = 'gestimoweb/api/v1/studio/save';\n  ApiService.getAllUtilisateursByOrderPath = 'gestimoweb/api/v1/utilisateur/all';\n  ApiService.getAllGerantsByOrderPath = 'gestimoweb/api/v1/utilisateur/gerants/all';\n  ApiService.getUtilisateurByEmailPath = 'gestimoweb/api/v1/utilisateur/getutilisateurbyemail/{email}';\n  ApiService.getUtilisateurByIDPath = 'gestimoweb/api/v1/utilisateur/getutilisateurbyid/{id}';\n  ApiService.getUtilisateurByUsernamePath = 'gestimoweb/api/v1/utilisateur/getutilisateurbyusername/{username}';\n  ApiService.getAllLocatairesByOrderPath = 'gestimoweb/api/v1/utilisateur/locataires/all';\n  ApiService.getAllProprietaireByOrderPath = 'gestimoweb/api/v1/utilisateur/proprietaires/all';\n  ApiService.saveUtilisateurPath = 'gestimoweb/api/v1/utilisateur/save';\n  ApiService.getAllSuperviseursByOrderPath = 'gestimoweb/api/v1/utilisateur/superviseurs/all';\n  ApiService.findAllVillaPath = 'gestimoweb/api/v1/villa/all';\n  ApiService.saveVillaPath = 'gestimoweb/api/v1/villa/save';\n  ApiService.findAllVillesPath = 'gestimoweb/api/v1/ville/all';\n  ApiService.deleteVillePath = 'gestimoweb/api/v1/ville/delete/{id}';\n  ApiService.findByIdVillePath = 'gestimoweb/api/v1/ville/findById/{id}';\n  ApiService.findAllVilleByIdPaysPath = 'gestimoweb/api/v1/ville/findByIdPays/{id}';\n  ApiService.findVilleByNameVillePath = 'gestimoweb/api/v1/ville/findByName/{name}';\n  ApiService.findAllVilleByPaysObjectPath = 'gestimoweb/api/v1/ville/findByPays';\n  ApiService.saveVillePath = 'gestimoweb/api/v1/ville/save';\n\n  ApiService.ɵfac = function ApiService_Factory(t) {\n    return new (t || ApiService)(i0.ɵɵinject(i1.ApiConfiguration), i0.ɵɵinject(i2.HttpClient));\n  };\n\n  ApiService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ApiService,\n    factory: ApiService.ɵfac,\n    providedIn: 'root'\n  });\n  return ApiService;\n})();\nexport { ApiService };","map":null,"metadata":{},"sourceType":"module"}