{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/gs-api/src/services\";\nimport * as i2 from \"../services/user/user.service\";\nexport let AuthInterceptor = /*#__PURE__*/(() => {\n  class AuthInterceptor {\n    constructor(apiService, userService) {\n      this.apiService = apiService;\n      this.userService = userService;\n    }\n\n    intercept(httpRequest, httpHandler) {\n      // console.log(`${this.apiService.rootUrl}gestimoweb/api/v1/auth/login`);\n      if (httpRequest.url.includes(`${this.apiService.rootUrl}gestimoweb/api/v1/auth/login`)) {\n        // console.log(\"we are in the interceptor\",httpRequest);\n        return httpHandler.handle(httpRequest);\n      }\n\n      this.userService.loadToken();\n      const token = this.userService.getToken();\n      const requestClone = httpRequest.clone({\n        setHeaders: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      return httpHandler.handle(requestClone);\n    }\n\n  }\n\n  AuthInterceptor.ɵfac = function AuthInterceptor_Factory(t) {\n    return new (t || AuthInterceptor)(i0.ɵɵinject(i1.ApiService), i0.ɵɵinject(i2.UserService));\n  };\n\n  AuthInterceptor.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthInterceptor,\n    factory: AuthInterceptor.ɵfac\n  });\n  return AuthInterceptor;\n})();","map":null,"metadata":{},"sourceType":"module"}